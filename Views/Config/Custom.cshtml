@model CustomBuilderViewModel
@using FerieCountdown.Classes.Countdowns;
@{
    Layout = "_Container";
    ViewData["Title"] = Model.Title;
}

<h1>@Model.Heading</h1>
<hr />
<h4>Forhåndsinnstillinger</h4>
<button class="btn btn-secondary" onclick="setBirthdayPreset()">Bursdag</button>
<hr />
<form asp-area="" asp-controller="Config" asp-action="@Model.Action" id="form">
    <br />
    <div class="form-group">
        <label for="cdtext">Nedtellingstekst</label>
        <input type="text" class="form-control" id="cdtext" name="cdtext" placeholder="Nedtelling til arrangement" required>
    </div>
    <div class="form-group">
        <label for="endtext">Tekst når nedtellingen er ferdig</label>
        <input type="text" class="form-control" id="endtext" name="endtext" placeholder="Arrangement er nå" required>
    </div>
    <div class="row">
        <div class="form-group col">
            <label for="time">Dato</label>
            <input type="date" class="form-control" id="date" required min="@DateTime.UtcNow.ToString("u").Substring(0, 10)" />
        </div>
        <div class="form-group col">
            <label for="time">Tidspunkt</label>
            <input type="time" class="form-control" id="timeinput" required />
        </div>
        <div class="form-group col">
            <label for="timezone">Tidssone</label>
            <select class="form-control" required id="timezone" name="timezone">
                <option value="user" selected>Din lokaltid (anbefales)</option>
                <option value="utc">UTC</option>
                <option value="local">Brukerens lokaltid</option>
            </select>
        </div>
    </div>
    <input type="hidden" id="time" name="time" />
    <div class="form-group">
        <label for="recursion">Gjentakelse</label>
        <select class="form-control" required id="recursion" name="recursion">
            <option value="none" selected>Ingen gjentakelse</option>
            <option value="yearly">Årlig gjentakelse</option>
            <option value="monthly">Månedlig gjentakelse</option>
            <option value="weekly">Ukentlig gjentakelse</option>
        </select>
    </div>


    <script>
        function PreviewImage(img) {
            var uri;
            switch (img) {
                @foreach (CountdownBackground cb in Model.BackgroundOptions)
                {
                <text>
                case "@cb.Id":
                    uri = "@cb.Path";
                    break;
                </Text>
                }
            }
            document.getElementById("imgpreview").src = uri;
            document.getElementById("imgpreview").style.display = "block";
            }
    </script>
    <div class="form-group">
        <label for="bg-select">Bakgrunn</label>
        <select class="form-control" id="bg-select" name="background" onchange="PreviewImage(this.value)" required>
            <option selected disabled>-</option>
            @foreach (CountdownBackground cb in Model.BackgroundOptions)
            {
                <option value="@cb.Id">@cb.CommonName</option>
            }
        </select>
    </div>

    <input type="hidden" name="g-recaptcha-response" id="g-recaptcha-response" />

    <img id="imgpreview" class="img-fluid col-md-6" />

</form>
<button onclick="submitForm()" class="btn btn-primary mt-3">Lagre</button>

@section scripts {
    <script src="https://www.google.com/recaptcha/api.js?render=6Ld59roUAAAAAED1YHj-tlIv0TfEsGamVXXOVBS0"></script>
    <script>
        grecaptcha.ready(function () {
            grecaptcha.execute('6Ld59roUAAAAAED1YHj-tlIv0TfEsGamVXXOVBS0', { action: 'createcustom' }).then(function (token) {
                document.getElementById("g-recaptcha-response").value = token;
            });
        });
    </script>
    <script>
        function submitForm() {
            //Validate the form
            if (document.getElementById("form").reportValidity()) {
                //Define variables for all inputs used by this function
                var time = document.getElementById("time");
                var date = document.getElementById("date");
                var timeinput = document.getElementById("timeinput");
                var timezone = document.getElementById("timezone");


                //Set the time input value based on selected timezone
                switch (timezone.value) {
                    case "local":
                    case "utc":
                        time.value = `${date.value}T${timeinput.value}Z`;
                        break;
                    case "user":
                        time.value = new Date(`${date.value}T${timeinput.value}`).toISOString();
                        break;
                }

                //Submit the form
                document.getElementById("form").submit();
            }
        }

        function setBirthdayPreset() {
            document.getElementById("cdtext").value = "Nedtelling til [Navn]s bursdag";
            document.getElementById("endtext").value = "Gratulerer med dagen [Navn]!";
            document.getElementById("timezone").selectedIndex = 0;
            document.getElementById("recursion").value = "yearly";
            document.getElementById("bg-select").value = "birthdaycake";
            PreviewImage("birthdaycake");
        }
    </script>
}
